// Top-level build file where you can add configuration options common to all sub-projects/modules.

//读取local.properties文件
Properties localProperties = new Properties()
def lp = new File('local.properties')
if (!lp.exists()) {
    lp = new File('..\\local.properties')
}
localProperties.load(lp.newDataInputStream())
ext {
    repositoryUserName = localProperties.getProperty('repositoryUserName')
    repositoryPassword = localProperties.getProperty('repositoryPassword')
    if (repositoryUserName == null || repositoryPassword == null) {
        throw new RuntimeException("请在local.properties添加私有仓库的用户名（repositoryUserName）和密码（repositoryPassword）")
    }
}

buildscript {
    ext.kotlin_version = "1.4.32"
    repositories {
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        maven { url 'https://maven.aliyun.com/repository/public/' }
        maven { url 'https://maven.aliyun.com/repository/google/' }
        maven { url 'https://maven.aliyun.com/repository/jcenter/' }
        maven { url 'https://maven.aliyun.com/repository/central/' }
        maven { url 'https://jitpack.io' }
        google()
        jcenter()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:4.1.3"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        maven { url 'https://maven.aliyun.com/repository/public/' }
        maven { url 'https://maven.aliyun.com/repository/google/' }
        maven { url 'https://maven.aliyun.com/repository/jcenter/' }
        maven { url 'https://maven.aliyun.com/repository/central/' }
        maven { url 'https://jitpack.io' }
        maven {
            url = 'https://mijukeji-maven.pkg.coding.net/repository/jileiku/base_maven/'
            credentials {
                username = repositoryUserName
                password = repositoryPassword
            }
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}